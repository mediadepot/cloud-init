---
ignition:
  config: {}
  timeouts: {}
networkd: {}
passwd: {}
storage:
  files:
    - filesystem: root
      path: "/opt/mediadepot/systemd/portainer/docker-compose.yml"
      mode: 493 #755
      contents:
        inline: |-
          version: '2'
          services:
            portainer:
              image: portainer/portainer
              volumes:
                - '/opt/mediadepot/portainer:/data'
                - '/var/run/docker.sock:/var/run/docker.sock'
              ports:
                - 9000:9000
              labels:
                - 'traefik.enable=true'
                - 'traefik.http.services.portainer.loadbalancer.server.port=9000'
                - 'traefik.http.routers.portainer.rule=Host(`admin.${DEPOT_DOMAIN_NAME}`)'
                - 'traefik.http.routers.portainer.entrypoints=websecure'
                - 'traefik.http.routers.portainer.tls.certresolver=mydnschallenge'
              command:
                - --no-analytics
                - --templates=https://mediadepot.github.io/templates/portainer.json
                - --host=unix:///var/run/docker.sock
              networks:
                - traefik
          networks:
            traefik:
              external: true
  directories:
  - filesystem: root
    mode: 493 #755
    path: "/opt/mediadepot/portainer/"
systemd:
  units:
  - name: portainer.service
    enabled: true
    contents: |-
      [Unit]
      Description=Portainer Admin Container
      After=docker.service depot-env.service
      Requires=docker.service depot-env.service

      [Service]
      Restart=always
      EnvironmentFile=-/etc/sysconfig/mediadepot
      TimeoutStartSec=0
      Restart=always
      WorkingDirectory=/opt/mediadepot/systemd/portainer/
      ExecStartPre=-/usr/bin/docker-compose down -v
      ExecStartPre=-/usr/bin/docker-compose rm -v
      ExecStartPre=-/usr/bin/docker-compose pull
      ExecStart=/usr/bin/docker-compose up
      ExecStop=/usr/bin/docker-compose down -v

      [Install]
      WantedBy=multi-user.target
      WantedBy=docker.service
