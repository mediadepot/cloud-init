---
ignition:
  config: {}
  timeouts: {}
networkd: {}
passwd: {}
storage:
  files:
    - filesystem: root
      path: "/opt/mediadepot/systemd/traefik/docker-compose.yml"
      mode: 493 #755
      contents:
        inline: |-
          version: '2'
          services:
            traefik:
              image: traefik:v2.0
              ports:
                # The HTTP port
                - "80:80"
                # The HTTPS port
                - "443:443"
                # The Web UI (enabled by --api.insecure=true)
                - "8080:8080"
              volumes:
                - "/var/run/docker.sock:/var/run/docker.sock:ro"
                - "/opt/mediadepot/traefik/letsencrypt:/letsencrypt"
              command:
                - --api.insecure=true
                - --providers.docker
                - --providers.docker.exposedByDefault=false
                - --providers.docker.network=traefik
                - --entrypoints.web.address=:80
                - --entrypoints.websecure.address=:443
                - '--providers.docker.defaultRule=Host(`{{ normalize .Name }}.${DEPOT_DOMAIN_NAME}`)'
                - "--certificatesresolvers.mydnschallenge.acme.dnschallenge=true"
                - "--certificatesresolvers.mydnschallenge.acme.dnschallenge.provider=cloudflare"
                - "--certificatesresolvers.mydnschallenge.acme.email=postmaster@${DEPOT_DOMAIN_NAME}"
                - "--certificatesresolvers.mydnschallenge.acme.storage=/letsencrypt/acme.json"
                - "--serverstransport.forwardingtimeouts.idleconntimeout=10"
              labels:
                # Force http to https redirects.
                - traefik.enable=true
                - traefik.http.routers.https-redirect.entrypoints=web
                - traefik.http.routers.https-redirect.rule=HostRegexp(`{any:.*}`)
                - traefik.http.routers.https-redirect.middlewares=https-only
                - traefik.http.middlewares.https-only.redirectscheme.scheme=https

                - 'traefik.http.routers.traefik.rule=Host(`traefik.${DEPOT_DOMAIN_NAME}`)'
                - traefik.http.routers.traefik.entrypoints=websecure
                - 'traefik.http.routers.traefik.service=api@internal'
                - traefik.http.routers.traefik.tls.certresolver=mydnschallenge
              # NOTE: for authentication you should create a new docker-compose.overrides.yml file and specify your environmental
              # variables.
              # environment:
              #   - "CF_DNS_API_TOKEN=mytoken here"
              networks:
                - traefik
          networks:
            traefik:
              external: true
systemd:
  units:
  - name: traefik.service
    enabled: true
    contents: |-
      [Unit]
      Description=Traefik Router Container
      After=docker.service depot-env.service
      Requires=docker.service depot-env.service

      [Service]
      Restart=always
      EnvironmentFile=-/etc/sysconfig/mediadepot
      TimeoutStartSec=0
      Restart=always
      WorkingDirectory=/opt/mediadepot/systemd/traefik/
      ExecStartPre=-/usr/bin/docker-compose down -v
      ExecStartPre=-/usr/bin/docker-compose rm -v
      ExecStartPre=-/usr/bin/docker-compose pull
      ExecStart=/usr/bin/docker-compose up
      ExecStop=/usr/bin/docker-compose down -v

      [Install]
      WantedBy=multi-user.target
      WantedBy=docker.service
